<?php

namespace GraphQL\SchemaObject;

class VulnerabilityQueryObject extends QueryObject
{
    const OBJECT_NAME = "Vulnerability";

    public function selectConfirmedAt()
    {
        $this->selectField("confirmedAt");

        return $this;
    }

    public function selectConfirmedBy(VulnerabilityConfirmedByArgumentsObject $argsObject = null)
    {
        $object = new UserCoreQueryObject("confirmedBy");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectDescription()
    {
        $this->selectField("description");

        return $this;
    }

    public function selectDescriptionHtml()
    {
        $this->selectField("descriptionHtml");

        return $this;
    }

    public function selectDetails(VulnerabilityDetailsArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityDetailUnionObject("details");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectDetectedAt()
    {
        $this->selectField("detectedAt");

        return $this;
    }

    public function selectDiscussions(VulnerabilityDiscussionsArgumentsObject $argsObject = null)
    {
        $object = new DiscussionConnectionQueryObject("discussions");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectDismissedAt()
    {
        $this->selectField("dismissedAt");

        return $this;
    }

    public function selectDismissedBy(VulnerabilityDismissedByArgumentsObject $argsObject = null)
    {
        $object = new UserCoreQueryObject("dismissedBy");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectExternalIssueLinks(VulnerabilityExternalIssueLinksArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityExternalIssueLinkConnectionQueryObject("externalIssueLinks");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectFalsePositive()
    {
        $this->selectField("falsePositive");

        return $this;
    }

    public function selectHasSolutions()
    {
        $this->selectField("hasSolutions");

        return $this;
    }

    public function selectId()
    {
        $this->selectField("id");

        return $this;
    }

    public function selectIdentifiers(VulnerabilityIdentifiersArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityIdentifierQueryObject("identifiers");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectIssueLinks(VulnerabilityIssueLinksArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityIssueLinkConnectionQueryObject("issueLinks");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectLinks(VulnerabilityLinksArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityLinkQueryObject("links");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectLocation(VulnerabilityLocationArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityLocationUnionObject("location");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectMergeRequest(VulnerabilityMergeRequestArgumentsObject $argsObject = null)
    {
        $object = new MergeRequestQueryObject("mergeRequest");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectMessage()
    {
        $this->selectField("message");

        return $this;
    }

    public function selectNotes(VulnerabilityNotesArgumentsObject $argsObject = null)
    {
        $object = new NoteConnectionQueryObject("notes");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectPrimaryIdentifier(VulnerabilityPrimaryIdentifierArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityIdentifierQueryObject("primaryIdentifier");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectProject(VulnerabilityProjectArgumentsObject $argsObject = null)
    {
        $object = new ProjectQueryObject("project");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectReportType()
    {
        $this->selectField("reportType");

        return $this;
    }

    public function selectResolvedAt()
    {
        $this->selectField("resolvedAt");

        return $this;
    }

    public function selectResolvedBy(VulnerabilityResolvedByArgumentsObject $argsObject = null)
    {
        $object = new UserCoreQueryObject("resolvedBy");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectResolvedOnDefaultBranch()
    {
        $this->selectField("resolvedOnDefaultBranch");

        return $this;
    }

    public function selectScanner(VulnerabilityScannerArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityScannerQueryObject("scanner");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectSeverity()
    {
        $this->selectField("severity");

        return $this;
    }

    public function selectState()
    {
        $this->selectField("state");

        return $this;
    }

    public function selectTitle()
    {
        $this->selectField("title");

        return $this;
    }

    public function selectUserNotesCount()
    {
        $this->selectField("userNotesCount");

        return $this;
    }

    public function selectUserPermissions(VulnerabilityUserPermissionsArgumentsObject $argsObject = null)
    {
        $object = new VulnerabilityPermissionsQueryObject("userPermissions");
        if ($argsObject !== null) {
            $object->appendArguments($argsObject->toArray());
        }
        $this->selectField($object);

        return $object;
    }

    public function selectVulnerabilityPath()
    {
        $this->selectField("vulnerabilityPath");

        return $this;
    }
}
